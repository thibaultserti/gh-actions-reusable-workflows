name: docker-push
on:
  workflow_call:
    inputs:
      platforms:
        default: "linux/amd64"
        required: false
        type: string
      use-prebuilt-image:
        default: false
        required: false
        type: boolean
      release:
        required: true
        type: string
      enable-signing:
        default: false
        required: false
        type: boolean

jobs:
  release-docker:
    name: ⬆️ Push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 📚 Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ vars.REGISTRY }}/${{ vars.NAME }}

      - name: ⚙️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ⬇ Download artifact
        uses: actions/download-artifact@v3
        if: ${{ inputs.use-prebuilt-image }}
        with:
          name: ${{ vars.NAME }}
          path: /tmp

      - name: 🔌 Load image
        if: ${{ inputs.use-prebuilt-image }}
        run: |
          docker load --input /tmp/${{ vars.NAME }}.tar

      - name: 🔑 Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build and push Docker image with tag ${{ inputs.release }}
        if: ${{ inputs.release }} != 'latest'
        id: docker_push_release
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.REGISTRY }}/${{ github.actor }}/${{ vars.NAME }}:${{ inputs.release }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}

      - name: 🐳 Build and push Docker image with tag latest
        id: docker_push_latest
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.REGISTRY }}/${{ github.actor }}/${{ vars.NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}

      - name: ⚙️ Setup Sigstore
        if: ${{ inputs.enable-signing }} && ${{ inputs.release }} != 'latest'
        uses: sigstore/cosign-installer@v3

      - name: 📝 Sign container image with annotations from our environment
        if: ${{ inputs.enable-signing }} && ${{ inputs.release }} != 'latest'
        run: |
          cosign sign -y \
            -a "repo=${{ github.repository }}" \
            -a "workflow=${{ github.workflow }}" \
            -a "ref=${{ github.sha }}" \
            ${{ vars.REGISTRY }}/${{ github.actor }}/${{ vars.NAME }}@${{ steps.docker_push_release.outputs.digest }}
